{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"textContent\"];\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Something else\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h1\", {\n    textContent: _toDisplayString($data.count)\n  }, null, 8\n  /* PROPS */\n  , _hoisted_1), _hoisted_2], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;gCAEEA,oBAAqB,GAArB,EAAqB,IAArB,EAAG,gBAAH,EAAiB;AAAA;AAAjB;;;6DADAA,oBAAwB,IAAxB,EAAwB;iBAApBC,iBAAQC,KAAM,MAAd;EAAoB,CAAxB;;EAAA,eACAC","names":["_createElementVNode","_toDisplayString","$data","_hoisted_2"],"sourceRoot":"","sources":["C:\\Users\\cjjie\\Desktop\\projects\\vue-app\\vue3\\src\\App.vue"],"sourcesContent":["<template>\n  <h1 v-text=\"count\"></h1>\n  <p>Something else</p>\n</template>\n\n<script>\nexport default ({\n  data() {\n    return{\n      title: \"<h1>This is title inside h1 tag</h1>\",\n      isShowing: false,\n      count:0,\n    };\n  },\n  mounted(){\n    setInterval(() => {\n      this.count++\n    },1000);\n  }\n});\n</script>\n"]},"metadata":{},"sourceType":"module"}