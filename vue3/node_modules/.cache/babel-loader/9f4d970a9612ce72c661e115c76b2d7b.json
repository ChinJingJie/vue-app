{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Add Hero\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h1\", null, \"Dc heros \" + _toDisplayString($data.herosCount), 1\n  /* TEXT */\n  ), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dcHeros, (hero, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(hero.name), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.addHero && $options.addHero(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newHero = $event),\n    placeholder: \"Type Hero Name Here\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.newHero]]), _createCommentVNode(\"<textarea v-model.lazy=\\\"newHero\\\"></textarea>\"), _hoisted_1], 32\n  /* HYDRATE_EVENTS */\n  )], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAQIA,oBAAuC,QAAvC,EAAuC;EAA/BC,IAAI,EAAC;AAA0B,CAAvC,EAAsB,UAAtB,EAA8B;AAAA;AAA9B;;;6DAPFD,oBAAkC,IAAlC,EAAkC,IAAlC,EAAI,cAASE,iBAAGC,gBAAH,CAAb,EAA0B;EAAA;EAA1B,GACAH,oBAEK,IAFL,EAEK,IAFL,EAEK,oBADHI,oBAAqEC,SAArE,EAAqE,IAArE,EAAqEC,YAA1CH,aAA0C,EAAnC,CAAtBI,IAAsB,EAAjBC,KAAiB,KAAZ;yBAAtBJ,oBAAqE,IAArE,EAAqE;MAAhCK,GAAG,EAAED;IAA2B,CAArE,EAA+CN,iBAAKK,IAAI,CAACG,IAAV,CAA/C,EAA6D;IAAA;IAA7D;GAAqE,CAArE;;EAAA,CACG,EAFL,GAGAV,oBAIO,MAJP,EAIO;IAJAW,QAAM,wDAAUC,6CAAV,EAAiB,WAAjB;EAIN,CAJP,mBACEZ,oBAA4D,OAA5D,EAA4D;+DAA5CG,gBAAOU,OAAqC;IAAnCC,WAAW,EAAC;EAAuB,CAA5D;;EAAA,kBAAgBX,kBAChBY,uEACAC,WAHF;;EAAA","names":["_createElementVNode","type","_toDisplayString","$data","_createElementBlock","_Fragment","_renderList","hero","index","key","name","onSubmit","$options","$event","placeholder","_createCommentVNode","_hoisted_1"],"sourceRoot":"","sources":["C:\\Users\\cjjie\\Desktop\\projects\\vue-app\\vue3\\src\\App.vue"],"sourcesContent":["<template>\n  <h1>Dc heros {{ herosCount }}</h1>\n  <ul>\n    <li v-for=\"(hero,index) in dcHeros\" :key=\"index\">{{ hero.name }}</li>\n  </ul>\n  <form @submit.prevent=\"addHero\">\n    <input v-model=\"newHero\" placeholder=\"Type Hero Name Here\"/>\n    <!--<textarea v-model.lazy=\"newHero\"></textarea>-->\n    <button type=\"submit\">Add Hero</button>\n  </form>\n</template>\n\n<script>\nexport default {\n  methods:{\n    addHero(){\n      if(this.newHero !== \"\"){\n        this.dcHeros.unshift({name:this.newHero});\n        this.newHero = \"\";\n      }\n    },\n  },\n  data(){\n    return{\n      newHero:\"\",\n      dcHeros: [{name:'SuperGirl'},{name:'Flash'},{name:'Batman'},{name:'Arrow'},{name:'SuperMan'}],\n      herosCount: this.dcHeros.length,\n    }\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}