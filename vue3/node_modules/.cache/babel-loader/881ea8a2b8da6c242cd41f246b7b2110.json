{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex flex-wrap w-full\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"w-full text-2xl text-center my-5 font-bold\"\n}, \"Slider Carousel\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"w-full text-sm text-center italic mt-0 mb-5\"\n}, \"A slideshow for cycling through a series of content.\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"w-full\",\n  style: {\n    \"height\": \"350px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [$data.currentSlide == 0 ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($data.sliders, color => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: color,\n      class: _normalizeClass([\"absolute w-full\", color]),\n      style: {\n        \"height\": \"350px\"\n      }\n    }, null, 2\n    /* CLASS */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  )) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;gCACLC,oBAA2E,IAA3E,EAA2E;EAAvED,KAAK,EAAC;AAAiE,CAA3E,EAAuD,iBAAvD,EAAsE;AAAA;AAAtE;;gCACAC,oBAA+G,GAA/G,EAA+G;EAA5GD,KAAK,EAAC;AAAsG,CAA/G,EAAuD,sDAAvD,EAA2G;AAAA;AAA3G;;;EACKA,KAAK,EAAC;EAASE,KAAoB,EAApB;IAAA;EAAA;;;uBAH1BC,oBAMM,KANN,cAMM,CALAC,UAKA,EAJAC,UAIA,EAHAJ,oBAEM,KAFN,cAEM,CAD+CK,sBAAY,uBAA7DH,oBAAsII,SAAtI,EAAsI;IAAAC;EAAA,CAAtI,EAAsIC,YAAjHH,aAAiH,EAA1HI,KAAgB,IAAX;yBAAjBP,oBAAsI,KAAtI,EAAsI;MAAvGK,GAAG,EAAEE,KAAkG;MAAlEV,KAAK,mBAAC,iBAAD,EAA2BU,KAA3B,EAA6D;MAA3BR,KAAoB,EAApB;QAAA;MAAA;IAA2B,CAAtI;;IAAA;GAAsI,CAAtI;;EAAA,sCACE,CAFN,CAGA,CANN","names":["class","_createElementVNode","style","_createElementBlock","_hoisted_2","_hoisted_3","$data","_Fragment","key","_renderList","color"],"sourceRoot":"","sources":["C:\\Users\\cjjie\\Desktop\\projects\\vue-app\\vue3\\src\\pages\\SliderCarousel.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex flex-wrap w-full\">\r\n        <h1 class=\"w-full text-2xl text-center my-5 font-bold\">Slider Carousel</h1>\r\n        <p class=\"w-full text-sm text-center italic mt-0 mb-5\">A slideshow for cycling through a series of content.</p>\r\n        <div class=\"w-full\" style=\"height:350px\">\r\n            <div v-for=\"color in sliders\" :key=\"color\" v-if=\"currentSlide == 0\" class=\"absolute w-full\" :class=\"color\" style=\"height:350px\"></div>\r\n        </div>     \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data(){\r\n        return{\r\n            currentSlide: 0,\r\n            sliders:['bg-blue-300','bg-yellow-300','bg-green-300'],\r\n            interval: \"\",\r\n        };\r\n    },\r\n    mounted(){\r\n        this.interval = setInterval(() => {\r\n            this.currentSlide = this.currentSlide == 2 ? 0:this.currentSlide+1;\r\n        }, 2000)\r\n    },\r\n    beforeUnmount(){\r\n        clearInterval(this.interval);\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}